### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Comment object type"""
type Comment {
  createdAt: String!
  id: String!
  isMyself: Boolean!
  payload: String!
  photo: Photo!
  updatedAt: String!
}

"""Create Comment Result object type"""
type CreateCommentResult {
  error: String
  ok: Boolean!
}

type EditPhotoResult {
  error: String
  ok: Boolean!
}

type FollowUserResult {
  error: String
  ok: Boolean!
}

"""Hashtag object type"""
type Hashtag {
  createdAt: String!
  hashtag: String!
  id: String!
  photos(page: Int!): [Photo]
  totalPhotos: Int
  updatedAt: String!
}

"""Like object type"""
type Like {
  createdAt: String!
  id: String!
  photo: Photo!
  updatedAt: String!
}

"""LikePhotoResult object type"""
type LikePhotoResult {
  error: String
  ok: Boolean!
}

type Mutation {
  createAccount(email: String!, firstName: String!, password: String!, username: String!): User
  createComment(payload: String!, photoId: String!): CreateCommentResult

  """Edit Photo Mutation"""
  editPhoto(caption: String!, id: String!): EditPhotoResult
  editProfile(avatar: Upload, bio: String, email: String, firstName: String, password: String): OkResult
  followUser(username: String!): FollowUserResult
  searchUsers(keyword: String!): [User]
  signin(password: String!, username: String!): OkResult

  """Like Photo Mutation"""
  toggleLike(id: String!): LikePhotoResult
  unfollowUser(username: String!): FollowUserResult

  """Upload Photo Mutation"""
  uploadPhoto(caption: String, file: String!): Photo
}

"""Object type for showing success/failure of signin & signup"""
type OkResult {
  error: String
  ok: Boolean!
  token: String
}

"""Photo object type"""
type Photo {
  caption: String
  createdAt: String!
  file: String!
  hashtags: [Hashtag]
  id: String!
  isMyself: Boolean!

  """Number of likes of the photo"""
  likes: Int!
  updatedAt: String!
  user: User!
}

type Query {
  """Search Photo Query"""
  searchPhoto(keyword: String!): Photo

  """See Feed Query"""
  seeFeed: [Photo]
  seeFollowers(page: Int!, username: String!): SeeFollowerResult
  seeFollowings(cursor: Int, username: String!): SeeFollowingResult

  """See Hashtag Query"""
  seeHashtag(hashtag: String!): Hashtag

  """See Like Query"""
  seeLikes(id: String!): [User]

  """See Photo Query"""
  seePhoto(id: String!): Photo

  """Query field for viewing the user profile"""
  seeProfile(username: String!): User
}

type SeeFollowerResult {
  error: String
  followers: [User]
  ok: Boolean!

  """Number of total followers"""
  totalFollower: Int
  totalPages: Int
}

"""SeeFollowingResult object type"""
type SeeFollowingResult {
  error: String
  following: [User]
  ok: Boolean!

  """Number of total following"""
  totalFollowing: Int
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

"""User object type"""
type User {
  avatar: String
  bio: String
  createdAt: String!
  email: String!
  firstName: String
  followers: [User]
  following: [User]
  id: String!
  isFollowing: Boolean!
  isMyself: Boolean!
  password: String!
  photos: [Photo]
  totalFollower: Int!
  totalFollowing: Int!
  updatedAt: String!
  username: String!
}